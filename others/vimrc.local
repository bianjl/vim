map <ScrollWheelUp> <C-Y>
map <ScrollWheelDown> <C-E>
set ttymouse=xterm2
set ttyfast

" 不要使用vi的键盘模式，而是vim自己的
set nocompatible

" history文件中需要记录的行数
set history=100

" 在处理未保存或只读文件的时候，弹出确认
set confirm

" 与windows共享剪贴板
"set clipboard+=unnamed

" 侦测文件类型
filetype on

" 载入文件类型插件
filetype plugin on

" 为特定文件类型载入相关缩进文件
filetype indent on

" 保存全局变量
set viminfo+=!

" 带有如下符号的单词不要被换行分割
set iskeyword+=_,$,@,%,#,-

" 语法高亮
syntax on

" 高亮字符，让其不受100列限制
:highlight OverLength ctermbg=red ctermfg=white guibg=red guifg=white
:match OverLength '\%101v.*'

" 状态行颜色
highlight StatusLine guifg=SlateBlue guibg=Yellow
highlight StatusLineNC guifg=Gray guibg=White


"" Display
set number        "" show line number
set ruler         "" always show current position
set cursorline    "" highlight the current line
set showcmd

"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" 文件设置
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" 不要备份文件（根据自己需要取舍）
set nobackup

" 不要生成swap文件，当buffer被丢弃的时候隐藏它
setlocal noswapfile
set bufhidden=hide

" 字符间插入的像素行数目
set linespace=0

" 增强模式中的命令行自动完成操作
set wildmenu


" 命令行（在状态行下）的高度，默认为1，这里是2
set cmdheight=1

" 使回格键（backspace）正常处理indent, eol, start等
set backspace=2

" 允许backspace和光标键跨越行边界
set whichwrap+=<,>,h,l

" 可以在buffer的任何地方使用鼠标（类似office中在工作区双击鼠标定位）
set mouse=a
set selection=exclusive
set selectmode=mouse,key

" 启动的时候不显示那个援助索马里儿童的提示
set shortmess=atI

"打开时回到上一次位置
if has("autocmd")
    au BufReadPost * if line("'\"") > 0|if line("'\"") <= line("$")|exe("norm '\"")|else|exe "norm $ " |endif|endif
" for simplicity, "  au BufReadPost * exe "normal! g`\"", is Okay.
endif

" 通过使用: commands命令，告诉我们文件的哪一行被改变过
set report=0

" 不让vim发出讨厌的滴滴声
set noerrorbells

" 在被分割的窗口间显示空白，便于阅读
"set fillchars=vert:\ ,stl:\ ,stlnc:\

"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" 搜索和匹配
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" 高亮显示匹配的括号
"set showmatch

" 匹配括号高亮的时间（单位是十分之一秒）
"set matchtime=5

" 在搜索的时候忽略大小写
set ignorecase

" 设置自动补全的色
hi Pmenu ctermfg=7 ctermbg=4 guibg=#555555 guifg=#ffffff 

" 高亮被搜索的句子（phrases）
"set hlsearch

" 在搜索时，输入的词句的逐字符高亮（类似firefox的搜索）
set incsearch

" 输入:set list命令是应该显示些啥？
set listchars=tab:\|\ ,trail:.,extends:>,precedes:<,eol:$

" 光标移动到buffer的顶部和底部时保持3行距离
set scrolloff=3

" 不要闪烁
set novisualbell

" 我的状态行显示的内容（包括文件类型和解码）
set showcmd
" 总是显示状态行
set laststatus=2

"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" 文本格式和排版
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" 自动格式化
set formatoptions=tcrqn

" 继承前一行的缩进方式，特别适用于多行注释
set autoindent

" 为C程序提供自动缩进
set smartindent

" 使用C样式的缩进
set cindent

" 制表符为4
set tabstop=4

" 统一缩进为4
set softtabstop=4
set shiftwidth=4

" 不要用空格代替制表符
set expandtab

" 换行
set wrap

" 在行和段开始处使用制表符
set smarttab


" 用空格键来开关折叠
set foldenable
set foldmethod=syntax
set foldlevel=100
nnoremap <space> @=((foldclosed(line('.')) < 0) ? 'zc' : 'zo')<CR>

" """"""""""""""""""""""""""auto complete () "" """"""""""""""""""""""""""""""""""""""""
:inoremap ( ()<ESC>i
:inoremap ) <c-r>=ClosePair(')')<CR>
:inoremap { {}<ESC>i
:inoremap } <c-r>=ClosePair('}')<CR>
:inoremap [ []<ESC>i
:inoremap ] <c-r>=ClosePair(']')<CR>
:inoremap < <><ESC>i
:inoremap > <c-r>=ClosePair('>')<CR>

function ClosePair(char)
if getline('.')[col('.') - 1] == a:char
return "\<Right>"
else
return a:char
endif
endf
let g:neocomplcache_enable_at_startup=1  


"Set mapleader
let mapleader = ","
let g:mapleader = ","
"Fast saving
nmap <leader>w :w!<cr>
nmap <leader>f :find<cr>

"" Plugins""

"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" CTags的设定
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
:set tags=./tags,./../tags,./*/tags,~/programme/unixnetwork/lib/tags,/usr/include/tags;

" Tagbar Replace the Tlist
nmap <F8> :TagbarToggle<CR>
highlight TagbarHighligh guifg=Green ctermfg=Green

"NERDTree{
map <leader>n :NERDTreeToggle<CR>
"if no no files were specified open a NERDTree 
autocmd vimenter * if !argc() | NERDTree | endif
"open a NERDTree automatically when vim starts up
"autocmd vimenter * NERDTree
"}

" Tagbar Replace the Tlist{
"" 按照名称排序
"let Tlist_Sort_Type = "name"
"
"" 在右侧显示窗口
""let Tlist_Use_Right_Window = 1
"
"" 压缩方式
""let Tlist_Compart_Format = 1
"
"" 如果只有一个buffer，kill窗口也kill掉buffer
"let Tlist_Exist_OnlyWindow = 1
"
"" 不要关闭其他文件的tags
"let Tlist_File_Fold_Auto_Close = 0
"
""设置自动启动
""let Tlist_Auto_Open = 1
"}


"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" runtime path manipulation
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
execute pathogen#infect()

"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" powerline
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
"powerline{
 set guifont=PowerlineSymbols\ for\ Powerline
 set nocompatible
 set t_Co=256
 set encoding=utf-8  "if not set, the powerline plugins won't work 
 "let g:Powerline_symbols = 'fancy'
 "}

if has("cscope")
        " add any database in current directory
        set nocsverb
        if filereadable("./cscope/cscope.out")
                cs add ./cscope/cscope.out
		elseif filereadable("cscope.out")
                cs add cscope.out
        elseif filereadable("../cscope.out")
                cs add ../cscope.out
        elseif filereadable("../../cscope.out")
                cs add ../../cscope.out
        elseif filereadable("../../../cscope.out")
                cs add ../../../cscope.out
        endif
        set csverb
        set csto=0
 
        "set cscope map
        nmap <leader>sa :cs add cscope.out<cr>
        nmap <leader>ss :cs find s <C-R>=expand("<cword>")<cr><cr>
        nmap <leader>sg :cs find g <C-R>=expand("<cword>")<cr><cr>
        nmap <leader>sc :cs find c <C-R>=expand("<cword>")<cr><cr>
        nmap <leader>st :cs find t <C-R>=expand("<cword>")<cr><cr>
        nmap <leader>se :cs find e <C-R>=expand("<cword>")<cr><cr>
        nmap <leader>sf :cs find f <C-R>=expand("<cfile>")<cr><cr>
        nmap <leader>si :cs find i <C-R>=expand("<cfile>")<cr><cr>
        nmap <leader>sd :cs find d <C-R>=expand("<cword>")<cr><cr>
endif
